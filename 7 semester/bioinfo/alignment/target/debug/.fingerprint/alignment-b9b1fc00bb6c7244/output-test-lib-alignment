{"$message_type":"diagnostic","message":"unused import: `core::panic`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":4,"byte_end":15,"line_start":1,"line_end":1,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use core::panic;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":0,"byte_end":17,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use core::panic;","highlight_start":1,"highlight_end":17},{"text":"// https://www.cs.sjsu.edu/~aid/cs152/NeedlemanWunsch.pdf","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `core::panic`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/needleman_wunsh.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::panic;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `process::exit` and `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":91,"byte_end":95,"line_start":3,"line_end":3,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":103,"byte_end":116,"line_start":3,"line_end":3,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":91,"byte_end":97,"line_start":3,"line_end":3,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":101,"byte_end":116,"line_start":3,"line_end":3,"column_start":27,"column_end":42,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":27,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":84,"byte_end":85,"line_start":3,"line_end":3,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/algorithms/needleman_wunsh.rs","byte_start":116,"byte_end":117,"line_start":3,"line_end":3,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"use std::{cmp::{self, max}, process::exit};","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `process::exit` and `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/needleman_wunsh.rs:3:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{cmp::{self, max}, process::exit};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot write into `Result<File, std::io::Error>`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/willao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24340,"byte_end":24349,"line_start":688,"line_end":688,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"        $dst.write_fmt($crate::format_args_nl!($($arg)*))","highlight_start":14,"highlight_end":23}],"label":"method not found in `Result<File, Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/dataloader/dataloader.rs","byte_start":1273,"byte_end":1309,"line_start":39,"line_end":39,"column_start":5,"column_end":41,"is_primary":false,"text":[{"text":"    writeln!(file, \"Sequence 1: {}\", s1)?;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"writeln!","def_site_span":{"file_name":"/home/willao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24201,"byte_end":24221,"line_start":683,"line_end":683,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! writeln {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/dataloader/dataloader.rs","byte_start":1282,"byte_end":1286,"line_start":39,"line_end":39,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    writeln!(file, \"Sequence 1: {}\", s1)?;","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"must implement `io::Write`, `fmt::Write`, or have a `write_fmt` method","code":null,"level":"note","spans":[{"file_name":"src/dataloader/dataloader.rs","byte_start":1282,"byte_end":1286,"line_start":39,"line_end":39,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    writeln!(file, \"Sequence 1: {}\", s1)?;","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: cannot write into `Result<File, std::io::Error>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dataloader/dataloader.rs:39:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeln!(file, \"Sequence 1: {}\", s1)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod not found in `Result<File, Error>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: must implement `io::Write`, `fmt::Write`, or have a `write_fmt` method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dataloader/dataloader.rs:39:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeln!(file, \"Sequence 1: {}\", s1)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot write into `Result<File, std::io::Error>`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/willao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24340,"byte_end":24349,"line_start":688,"line_end":688,"column_start":14,"column_end":23,"is_primary":false,"text":[{"text":"        $dst.write_fmt($crate::format_args_nl!($($arg)*))","highlight_start":14,"highlight_end":23}],"label":"method not found in `Result<File, Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/dataloader/dataloader.rs","byte_start":1316,"byte_end":1352,"line_start":40,"line_end":40,"column_start":5,"column_end":41,"is_primary":false,"text":[{"text":"    writeln!(file, \"Sequence 2: {}\", s2)?;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"writeln!","def_site_span":{"file_name":"/home/willao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":24201,"byte_end":24221,"line_start":683,"line_end":683,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! writeln {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/dataloader/dataloader.rs","byte_start":1325,"byte_end":1329,"line_start":40,"line_end":40,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    writeln!(file, \"Sequence 2: {}\", s2)?;","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"must implement `io::Write`, `fmt::Write`, or have a `write_fmt` method","code":null,"level":"note","spans":[{"file_name":"src/dataloader/dataloader.rs","byte_start":1325,"byte_end":1329,"line_start":40,"line_end":40,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"    writeln!(file, \"Sequence 2: {}\", s2)?;","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: cannot write into `Result<File, std::io::Error>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dataloader/dataloader.rs:40:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeln!(file, \"Sequence 2: {}\", s2)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod not found in `Result<File, Error>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: must implement `io::Write`, `fmt::Write`, or have a `write_fmt` method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dataloader/dataloader.rs:40:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeln!(file, \"Sequence 2: {}\", s2)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}
